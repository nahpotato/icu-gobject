/*
 * Copyright 2022 Nahuel Gomez https://nahuelwexd.com
 *
 * SPDX-License-Identifier: LGPL-3.0-or-later
 */

#pragma once

#if !defined(_ICU_GOBJECT_INSIDE) && !defined(ICU_GOBJECT_COMPILATION)
#  error "Only <icu-gobject.h> can be included directly"
#endif

#include <glib.h>

G_BEGIN_DECLS

/**
 * ICU_MAJOR_VERSION:
 *
 * icu-gobject major version component (e.g. 1 if [const@VERSION] is
 * 1.2.3).
 */
#define ICU_MAJOR_VERSION (@MAJOR_VERSION@)

/**
 * ICU_MINOR_VERSION:
 *
 * icu-gobject minor version component (e.g. 2 if [const@VERSION] is
 * 1.2.3).
 */
#define ICU_MINOR_VERSION (@MINOR_VERSION@)

/**
 * ICU_MICRO_VERSION:
 *
 * icu-gobject micro version component (e.g. 3 if [const@VERSION] is
 * 1.2.3).
 */
#define ICU_MICRO_VERSION (@MICRO_VERSION@)

/**
 * ICU_VERSION:
 *
 * icu-gobject version (e.g. 1.2.3).
 */
#define ICU_VERSION       (@VERSION@)

/**
 * ICU_VERSION_S:
 *
 * icu-gobject version, encoded as a string, useful for printing and
 * concatenation.
 */
#define ICU_VERSION_S     "@VERSION@"

#define ICU_ENCODE_VERSION(major,minor,micro) \
  ((major) << 24 | (minor) << 16 | (micro) << 8)

/**
 * ICU_VERSION_HEX:
 *
 * icu-gobject version, encoded as an hexadecimal number, useful for
 * integer comparisons.
 */
#define ICU_VERSION_HEX \
  (ICU_ENCODE_VERSION (ICU_MAJOR_VERSION, ICU_MINOR_VERSION, ICU_MICRO_VERSION))

/**
 * ICU_CHECK_VERSION:
 * @major: required major version
 * @minor: required minor version
 * @micro: required micro version
 *
 * Compile-time version checking. Evaluates to `TRUE` if the version
 * of icu-gobject is the sames as or greater than the required one.
 */
#define ICU_CHECK_VERSION(major,minor,micro)                         \
  (ICU_MAJOR_VERSION > (major) ||                                    \
    (ICU_MAJOR_VERSION == (major) && ICU_MINOR_VERSION > (minor)) || \
    (ICU_MAJOR_VERSION == (major) && ICU_MINOR_VERSION == (minor) && \
      ICU_MICRO_VERSION >= (micro)))

#if !defined(_ICU_EXTERN)
#  define _ICU_EXTERN extern
#endif

#define ICU_AVAILABLE_IN_ALL _ICU_EXTERN

ICU_AVAILABLE_IN_ALL
guint icu_get_major_version (void) G_GNUC_CONST;
ICU_AVAILABLE_IN_ALL
guint icu_get_minor_version (void) G_GNUC_CONST;
ICU_AVAILABLE_IN_ALL
guint icu_get_micro_version (void) G_GNUC_CONST;

G_END_DECLS
